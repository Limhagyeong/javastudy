/*
 *  메소드는 입력을 받아서 처리하고 결과값을 반환역할
 *        -----------      -----------
 *         매개변수           리턴형
 *           |               |
 *          사용자          프로그램
 *  => 구성요소
 *     리턴형 / 매개변수 / 메소드명
 *     ----   ------
 *  => 선언부 
 *     리턴형 메소드명(매개변수목록)
 *  => 구현부
 *  {
 *    ----
 *    ----
 *    메소드 종료 => return 
 *    ==> void의 경우 생략 가능
 *  }
 *  => 매개변수 전송
 *     int c=add(10, 20) => 호출시에는 매개변수값을 전송
 *               |     |
 *     int add(int a, int b) => 임시 메모리 공간 => 지역변수의 일종
 *     {
 *       return a+b; => 30 => c에 저장
 *     }
 *     
 *  => 입력값 (O), 리턴형(O)
 *  => 입력값 (O), 리턴형(X) => 리턴형이 없는 경우 void 
 *  => 입력값 (X), 리턴형(O)  
 *  => 입력값 (X), 리턴형(X)  
 *   
 *   메소드 정의 
 *   ---------
 *   1. 특정 작업을 수행하는 명령문의 집합
 *                      ----- 변수 연산자 제어문
 *   2. 메소드 호출할 경우에만 매개변수가 메모리 할당을 한다
 *      --------
 *   메소드는 호출할 때마다 처음부터 return이 있는 곳까지 실행이 된다
 *   
 *   메소드의 매개변수 전송
 *    = 배열, 클래스 => 주소 참조 (자체가 변경) => 같은 메모리 이용
 *      Call By Reference
 *    = 일반 데이터형 => 값 참조 (값 자체는 변경이 안됨) => 다른 메모리에 생성
 *      Call By Value
 *      
 *  =========================================================================
 *  절차적 프로그램 => 구조적 프로그램 => 객체 지향 프로그램
 *    |               |                  |
 *   한줄씩 나열      같은 기능별 나눠서 작업   변수+메소드
 *                 메소드
 *   변수 => 보호 (데이터 손실 방지) => 캡슐화
 */
public class 메소드정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
