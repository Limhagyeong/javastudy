/*
 *  1. 실행 순서
 *     => 자바 파일명과 클래스명 동일
 *        대소문자 구분
 *        
 *            컴퓨터가 인식하는 언어로 변환
 *            javac (컴파일) => 0, 1             java(인터프리터)
 *     A.java ======================> A.class ===============> 실행 
 *     ------                         바이너리코드
 *       |                         장점: 모든 운영체제에 호환
 *     원시소스 (프로그래머만 아는 언어)
 *      ==> 이클립스 : javac + java => ctrl + F11
 *      
 *  2. 소스 코딩의 주의점
 *     1) 대소문자 구분
 *     2) 명령문 끝난 후;
 *     3) 주석 처리 
 *     4) 들여쓰기 => { => 엔터 }
 *     
 *  3. 자바 개발자의 약속
 *     1) 변수 / 클래스 / 메소드 / 상수 / 인터페이스
 *        변수 : 소문자 시작 => 다른 단어는 첫자를 대문자로 표기
 *              fileName , file_name
 *        상수 : 모든 알파벳을 대문자로 표기
 *              MAX, MIN ...
 *        클래스, 인터페이스 : 첫자를 대문자로 표기 / 단어 두개가 붙으면 두번째 첫 단어 대문자
 *               MainClass
 *        메소드 : 변수와 동일! 
 *        
 *  *** 프로그램 (데이터 관리) 
 *      데이터 저장 
 *         = 메모리 => 프로그램 종료와 동시에 사라진다
 *           한개의 데이터 관리 => 변수
 *            => 기본형으로 메모리 크기 결정
 *               정수
 *               byte(1byte) / int(4byte) / long(8byte)
 *               문자
 *               char(2byte)
 *               실수
 *               float(4byte) / double(8byte)
 *               논리
 *               boolean(1byte)
 *           여러개의 데이터 관리 => 배열, 클래스 (사용자 정의 => 참조형)
 *              int + double + char => 14byte 크기로 늘려서 사용 (필요한 메모리 크기 만듦)
 *  --------------------------------------------------
 *         = 파일
 *         = RDBMS (오라클)
 *  4. 변수 / 연산자 / 제어문 / 데이터 모아서 관리 / 재사용 / 예외처리
 *     
 *    => 라이브러리 이용한 조립식
 *  5. 응용 : 네트워크 , 파일
 *  ----------------------------------------------------------
 *  오라클 (21c) : CURD (추가, 수정, 삭제, 검색)
 *  ---------------------------------------------------------- 필수 문법!
 *  브라우저 연동 : HTML/CSS3/Javascript
 *                         ----------- Jquery(Ajax)
 *                         ----------- VueJs (Vuex)
 *                         ----------- ReactJs (Redux)
 *                         옵션-------- TypeScript/NodeJs
 *                                                ------
 *                                                  |
 *                                               실시간 상담
 *  JSP => Back-End + Front-End
 *  --- MVC (SpringMVC => 직접 Spring 제작)
 *  Database 연동 => MyBatis / JPA
 *  Spring
 *  Spring - Boot : ThymeLeaf
 *  AWS => PaaS ==> EC2
 *  ---------------------------------------------------------
 *  Python : 데이터 분석, 시각화
 *           Pandas / Numpy / MatplotLap
 *           옵션 : 머신러닝 / 딥러닝
 *                ---------------
 *                
 *  변수 : 메모리에 한개의 데이터를 저장할수있는 공간의 별칭
 *        ----- 주소
 *        변수명 설정
 *        1) 알파벳으로 시작 (대소문자 구분), 한글 (호환문제있을수있음)
 *        2) 숫자 사용 가능 (앞에 표기는 불가)
 *        3) 키워드 사용 불가
 *        4) 공백 사용 불가
 *        5) 특수기호 사용 가능 ( $, _ )
 *        6) 기타사항 => 압축(문자개수 제한은 X / 통상 3~7자) => i, j는 사용 자제
 *      ----------------------------------------------------------------
 *        변수 선언 방식
 *        데이터형 변수;
 *        
 *        변수의 초기화
 *        변수명=값;
 *        
 *        변수의 활용
 *        변수명=값 (수정) ==> 자동으로 {}을 벗어나면 삭제됨
 *        
 *        변수의 종류 ====> 지역변수: {} 안에서 사용
 *        
 *        데이터를 저장 ===> 데이터를 가공 ===> 가공된 데이터 출력
 *                          |               화면에 출력
 *                         연산자
 *                         제어문
 *                         ----메소드
 *        1. 산술연산자
 *            +, -, *, /, % 
 *            1) 연산은 같은 데이터끼리만 연산된다
 *               10.5 + 10 => 10.5 + 10.0 으로 변환돼서 처리됨
 *                'A' + 1 => 65 + 1 으로 변환돼서 처리됨 
 *            2) 
 *               + : 산술처리 / 문자열 결합
 *                    = '' 문자
 *                    = "" 문자열     
 *                   7+"7"+7-5 는 오류! => "777"-5 => 7+"7"+(7-5)는 가능 => "77"+2
 *                   7+"7"+7*2 는 가능! 
 *                   
 *                      *산술 => 왼쪽에서 오른쪽으로 연산
 *                             *,/,% 은 +,-보다 우선 순위
 *                             => 우선순위를 변경할 때는 ()
 *               / 
 *               1) 정수 / 정수 = 정수
 *               2) 0으로 나누면 오류 발생 
 *               % 
 *                ==> 값부호가 왼쪽부호를 따라간다
 *                     - % + => -
 *                     - % - => -
 *                     + % - => +
 *                     + % + => +
 *                     
 *          형변환 (대입연산자로 연산된거임) 
 *           int a='A';   ===> a=65
 *           double d=10; ===> d=10.0
 *           
 *           데이터형은 무조건 왼쪽 <= 오른쪽
 *                         ------------
 *           
 */
// 3개의정수 (1~100 사이의 숫자) => 총합, 평균

public class 산술연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int a=(int)(Math.random()*100)+1;
		int b=(int)(Math.random()*100)+1;
		int c=(int)(Math.random()*100)+1;
		System.out.println("a="+a+",b="+b+",c="+c);
		System.out.println((a+b+c)/3.0); // 평균구하는 방법 1
	    
		int total=a+b+c;
		System.out.println("총합:"+total);
		double avg=total/3.0;
		System.out.printf("평균:%.2f\n",avg); // 평균구하는 방법 2 / \n 붙여주면 다음 라인이 아래에 출력됨 (없애서 확인해보기)
		/*
		 * 실수  : %f %.2f %.3f
		 * 정수  : %d
		 * 문자  : %c
		 * 문자열 : %s
		 */
		System.out.println("===============");
		System.out.println("===============");
		System.out.print("aaa");
		System.out.print("bbb"); // print => 가로로 붙여 옆으로 출력
	}   

}
